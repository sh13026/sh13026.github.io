{
	"openapi": "3.0.0",
	"info": {
		"title": "Askey AMP NBI API",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "http://10.8.21.3:8443/nbi",
			"description": "Askey DMSAMP API Auto"
		}
	],
	"security": [
		{
			"Bearer": []
		}
	],
	"paths": {
		"/user/accountAdmin/accountList": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "get user account list",
				"description": "This method is used by the ACS to get all user.",
				"operationId": "userListGET",
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/user/accountAdmin/accountAllCount": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "get user count",
				"description": "This method is used by the ACS to get user count.",
				"operationId": "userCountGET",
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/user/accountAdmin/accountUpdate": {
			"put": {
				"tags": [
					"user"
				],
				"summary": "updateUser",
				"description": "This method is used by the ACS to update a user.",
				"operationId": "userUpdatePUT",
				"requestBody": {
					"description": "body",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/user_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/user/accountAdmin/accountAdd": {
			"post": {
				"tags": [
					"user"
				],
				"summary": "addUser",
				"description": "This method is used by the ACS to add a user.",
				"operationId": "userAddPOST",
				"requestBody": {
					"description": "body",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/user_body_1"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/user/accountAdmin/{id}": {
			"delete": {
				"tags": [
					"user"
				],
				"summary": "removeUser",
				"description": "This method is used by the ACS to remove a user.",
				"operationId": "userIdDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/user/accountAdmin/{id}/{isAllow}": {
			"put": {
				"tags": [
					"user"
				],
				"summary": "activeUser",
				"description": "This method is used by the ACS to active or deactive a user.",
				"operationId": "userIdAllowPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isAllow",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"activate",
								"deactivate"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/user/accountAdmin/verify": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "verify",
				"description": "verify",
				"operationId": "userVerifyGET",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				},
				"security": [
					{
						"Basic": []
					}
				]
			}
		},
		"/user/accountLog/byFilters": {
			"get": {
				"tags": [
					"user"
				],
				"description": "This method is used by the ACS to get account logs.",
				"operationId": "userAccountLogByFiltersGET",
				"parameters": [
					{
						"name": "size",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverSetting/getAttributes": {
			"get": {
				"tags": [
					"system"
				],
				"summary": "getServerSettingAttributes",
				"description": "This method is used by the ACS to get attributes of the serverSetting.",
				"operationId": "serverSettingAttributesGET",
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverSetting/updateAttribute": {
			"post": {
				"tags": [
					"system"
				],
				"summary": "updateAttribute",
				"description": "This method is used by the ACS to update Attributes.",
				"operationId": "systemUpdateAttributesPOST",
				"requestBody": {
					"description": "body",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/scope_attribute_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverSetting/updateAttribute/{parameter}": {
			"post": {
				"tags": [
					"system"
				],
				"summary": "update systemUpdateAttributesParameter",
				"description": "This method is used by the ACS to update attributes of the provision.",
				"operationId": "systemUpdateAttributesParameterPOST",
				"parameters": [
					{
						"name": "parameter",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "value",
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverSetting/summaryReportConfig": {
			"get": {
				"tags": [
					"system"
				],
				"summary": "getServersummaryReportconfig",
				"description": "get Server summaryReport config",
				"operationId": "systemSummaryReportConfigGET",
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverPreference/": {
			"get": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to get all perferences.",
				"operationId": "systemPreferencesGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverPreference/update": {
			"post": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to update preferences.",
				"operationId": "serverPreferenceUpdatePOST",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/preferences_update_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverLicense/": {
			"get": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to get the license.",
				"operationId": "serverLicenseGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverLicense/update/": {
			"post": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to update license.",
				"operationId": "systemLicenseUpdatePOST",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/addOn/personalTheme/": {
			"get": {
				"tags": [
					"addOn"
				],
				"description": "This method is used by the ACS to get personal theme.",
				"operationId": "addOnPersonalThemeGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"put": {
				"tags": [
					"addOn"
				],
				"description": "This method is used by the ACS to update personal theme.",
				"operationId": "addOnUpdatePersonalThemePUT",
				"requestBody": {
					"description": "body",
					"content": {
						"application/json": {
							"schema": {
								"type": "array"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverReport/list": {
			"get": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to get the system report logs.",
				"operationId": "systemServerReportListGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverReport/count": {
			"get": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to get the system report count.",
				"operationId": "systemServerReportCountGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverReport/generate": {
			"post": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to generate the system report.",
				"operationId": "systemServerReportGeneratePOST",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverReport/delAll": {
			"delete": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to delete all the system report.",
				"operationId": "systemServerReportDelAllDELETE",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverReport/{reportId}": {
			"delete": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to delete systemReport by reportId.",
				"operationId": "systemServerReportReportIdDELETE",
				"parameters": [
					{
						"name": "reportId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/system/serverReport/export/{reportId}": {
			"post": {
				"tags": [
					"system"
				],
				"description": "This method is used by the ACS to export systemReport by reportId.",
				"operationId": "systemServerReportReportIdExportPOST",
				"parameters": [
					{
						"name": "reportId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "format",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"enum": [
								"txt",
								"csv",
								"xlsx"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/addOn/reportExport/summary/availProductNames": {
			"get": {
				"tags": [
					"addOn"
				],
				"description": "This method is used by the ACS to get summary AvailProductNames.",
				"operationId": "addOnSummaryAvailProductNamesGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/addOn/reportExport/{productName}/summaryReportConfig": {
			"get": {
				"tags": [
					"addOn"
				],
				"description": "This method is used by the ACS to get summaryReportConfig.",
				"operationId": "addOnSummaryReportConfigGET",
				"parameters": [
					{
						"name": "productName",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/addOn/reportExport/summaryReport/export": {
			"post": {
				"tags": [
					"addOn"
				],
				"description": "This method is used by the ACS to create the summary report by product class with given json body.",
				"operationId": "addOnSummaryReportPOST",
				"parameters": [
					{
						"name": "format",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"enum": [
								"txt",
								"csv",
								"xlsx"
							]
						}
					}
				],
				"requestBody": {
					"description": "SummaryConfigStruct",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/report_summary_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/analysis/systemStatistics/serverStatus": {
			"get": {
				"tags": [
					"analysis"
				],
				"description": "This method is used by the ACS to get the ACS statistics serverStatus.",
				"operationId": "analysisStatisticsServerStatusGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/analysis/systemStatistics/serverStatus/usp": {
			"get": {
				"tags": [
					"analysis"
				],
				"description": "Get usp Statistics serverStatus",
				"operationId": "analysisStatisticsServerStatusUspGET",
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/analysis/systemStatistics/cluster/": {
			"get": {
				"tags": [
					"analysis"
				],
				"description": "This method is used by the ACS to get the ACS cluster, list onlined ACS server id.",
				"operationId": "analysisClusterGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/analysis/deviceStatistics/{statisticsType}": {
			"get": {
				"tags": [
					"analysis"
				],
				"description": "This method is used by the ACS to get the dashboard count of devices.",
				"operationId": "analysisDeviceStatisticsCountGET",
				"parameters": [
					{
						"name": "days",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "time",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "2022-03-11T04:25:12.416Z"
					},
					{
						"name": "statisticsType",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"All",
								"device",
								"newDevice",
								"sessions",
								"eventCode"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/analysis/systemStatistics/{nodeId}/metrics/{statisticsType}": {
			"get": {
				"tags": [
					"analysis"
				],
				"description": "This method is used by the ACS to get the system Statistics.",
				"operationId": "analysisStatisticsDataGET",
				"parameters": [
					{
						"name": "nodeId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "statisticsType",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"All",
								"cpeSessDuration",
								"cpeSessRate",
								"cpeReqLatency",
								"cpeReqRate",
								"cpeReqParsing",
								"memoryUsage",
								"cpuUsage",
								"freeDisk",
								"notifyArrivalRate",
								"messageProcessDuration"
							]
						}
					},
					{
						"name": "interval",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "startTime",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "2022-03-11T04:25:12.416Z"
					},
					{
						"name": "endTime",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "2022-03-11T04:25:12.416Z"
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/analysis/deviceStatistics/count/total": {
			"get": {
				"tags": [
					"analysis"
				],
				"description": "This method is used by the ACS to get total count.",
				"operationId": "analysisDeviceCountTotalGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"404": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/analysis/deviceStatistics/count/status/Online": {
			"get": {
				"tags": [
					"analysis"
				],
				"description": "This method is used by the ACS to get total count.",
				"operationId": "analysisCountStatusOnlineGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"404": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/analysis/provisioningStatistics/availStatisticsProductNames": {
			"get": {
				"tags": [
					"analysis"
				],
				"description": "This method is used by the ACS to get AvailStatistics of ProductNames",
				"operationId": "analysisAvailStatisticsProductNamesGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/analysis/provisioningStatistics/{productName}/{statisticsType}/report": {
			"post": {
				"tags": [
					"analysis"
				],
				"description": "This method is used by the ACS to create the provisioning report.",
				"operationId": "analysisStatisticsProvisionReportPOST",
				"parameters": [
					{
						"name": "productName",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "statisticsType",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"All",
								"online",
								"total",
								"xmpp",
								"ims",
								"ipsec",
								"provisioningCode",
								"simStatus",
								"softwareVersion"
							]
						}
					},
					{
						"name": "refresh",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/provisioning_report_body"
								}
							}
						}
					},
					"required": false
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/productList": {
			"get": {
				"tags": [
					"productClass"
				],
				"summary": "getProductClassList",
				"description": "This method is used by the ACS to get product classes list.",
				"operationId": "deviceProductListGET",
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/productAdd": {
			"post": {
				"tags": [
					"productClass"
				],
				"summary": "createProductClass",
				"description": "This method is used by the ACS to add a product class.",
				"operationId": "deviceAddProductPOST",
				"requestBody": {
					"description": "productClassStruct",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/productClass_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{productName}/collectItem": {
			"get": {
				"tags": [
					"productClass"
				],
				"summary": "getProductClass",
				"description": "get ProductClass collect item by name.",
				"operationId": "productClassCollectItemGET",
				"parameters": [
					{
						"name": "productName",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/deleteProduct": {
			"delete": {
				"tags": [
					"productClass"
				],
				"summary": "deleteProductClass",
				"description": "delete ProductClass by id.",
				"operationId": "productClassIdDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "force",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/getProduct": {
			"get": {
				"tags": [
					"productClass"
				],
				"summary": "getProductClass",
				"description": "get ProductClass by id.",
				"operationId": "productClassIdGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/updateProduct": {
			"put": {
				"tags": [
					"productClass"
				],
				"summary": "updateProduct",
				"description": "update ProductClass by id.",
				"operationId": "productClassIdPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "productClassStruct",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/productClass_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/getAttributes": {
			"get": {
				"tags": [
					"productClass"
				],
				"summary": "attributes",
				"description": " This method is used by the ACS to get the product class attributes.",
				"operationId": "productClassIdAttributesGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/uploadYangFile": {
			"post": {
				"tags": [
					"productClass"
				],
				"description": " This method is used by the ACS to upload yang module file.",
				"operationId": "productClassIdYangFilePOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/summaryReportConfig": {
			"get": {
				"tags": [
					"productClass"
				],
				"summary": "getServersummaryReportconfig",
				"description": "get Server summaryReport config",
				"operationId": "productClassSummaryReportConfigGET",
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/summaryReportConfig": {
			"get": {
				"tags": [
					"productClass"
				],
				"summary": "getsummaryReportconfig",
				"description": "get summaryReport config",
				"operationId": "productClassIdSummaryReportConfigGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"post": {
				"tags": [
					"productClass"
				],
				"summary": "updatesummaryReportconfig",
				"description": "update summaryReport config",
				"operationId": "productClassIdSummaryReportConfigPOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "SummaryConfigStruct",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/report_summary_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/updateAttribute": {
			"post": {
				"tags": [
					"productClass"
				],
				"summary": "update productClass attribute by ID",
				"description": "This method is used by the ACS to update the product class attribute.",
				"operationId": "productClassIdAttributePOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "attribute data.",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/id_attribute_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					},
					"500": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/updateAttribute/{name}": {
			"post": {
				"tags": [
					"productClass"
				],
				"summary": "attributes",
				"description": "This method is used by the ACS to update the product class attribute.",
				"operationId": "productClassIdAttributesNamePOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "value",
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"500": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/deleteAttribute/{name}": {
			"delete": {
				"tags": [
					"productClass"
				],
				"summary": "attributes",
				"description": "This method is used by the ACS to delete the product class attribute.",
				"operationId": "productClassIdAttributesNameDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"500": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/productName": {
			"get": {
				"tags": [
					"productClass"
				],
				"summary": "getProductName",
				"description": "This method is used by the ACS to get all productName.",
				"operationId": "getProductNameGET",
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/cpeList": {
			"put": {
				"tags": [
					"productClass"
				],
				"summary": "addProductClassCpeItem",
				"description": "add ProductClass cpe item.",
				"operationId": "productClassCpeItemPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/cpeList/delete": {
			"post": {
				"tags": [
					"productClass"
				],
				"summary": "deleteProductClassCpeItem",
				"description": "delete ProductClass cpe item.",
				"operationId": "productClassCpeItemDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/getFiles": {
			"get": {
				"tags": [
					"productClass"
				],
				"summary": "getProductClassFiles",
				"description": "This method is used by the ACS to get file bt productId.",
				"operationId": "productClassIdFilesGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "productId",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/productAdmin/{id}/{op}": {
			"put": {
				"tags": [
					"productClass"
				],
				"summary": "productclass_enable",
				"description": "productclass enable",
				"operationId": "productClassIdOpPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "op",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"activate",
								"deactivate"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/systemAlarm/byFilters": {
			"get": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to get system alarms.",
				"operationId": "systemAlarmByFiltersGET",
				"parameters": [
					{
						"name": "turnPage",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "id",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "time",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "eventTime,desc"
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/defaultConfig": {
			"get": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to get alarm default config.",
				"operationId": "alarmDefaultConfigGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/systemAlarm/export": {
			"post": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to export system alarms.",
				"operationId": "systemAlarmExportPOST",
				"parameters": [
					{
						"name": "turnPage",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/deviceAlarm/byFilters": {
			"get": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to get system events.",
				"operationId": "alarmsByFiltersGET",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"example": 0
					},
					{
						"name": "turnPage",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"example": 0
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"example": 10
					},
					{
						"name": "id",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "time",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "2021-03-11T04:25:12.416Z"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "EventTime,desc"
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/deviceAlarm/24hours": {
			"get": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to get system events.",
				"operationId": "alarmsBy24HoursGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/deviceAlarm/deviceAlarmAllCount": {
			"get": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to get device alarms count.",
				"operationId": "alarmsCountGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/deviceAlarm/ack/{id}": {
			"post": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to ack device alarm.",
				"operationId": "alarmAckIdPOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/deviceAlarm/ackMany": {
			"post": {
				"tags": [
					"alarm"
				],
				"operationId": "alarmAckManyPOST",
				"requestBody": {
					"description": "Event id list.",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/deviceAlarm/errorList": {
			"get": {
				"tags": [
					"alarm"
				],
				"operationId": "alarmErrorListGET",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "ErrorTime,desc"
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/deviceAlarm/export": {
			"post": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to export devices alarms.",
				"operationId": "deviceAlarmExportPOST",
				"parameters": [
					{
						"name": "turnPage",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/userAction/export": {
			"post": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to export user Actions.",
				"operationId": "userActionExportPOST",
				"parameters": [
					{
						"name": "turnPage",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/notificationManagement/notificationList": {
			"get": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to get all monitor rules.",
				"operationId": "alarmNotificationGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/notificationManagement/notificationAdd": {
			"post": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to add a new notification rule.",
				"operationId": "alarmNotificationPOST",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/monitoring_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/notificationManagement/{id}/{operation}": {
			"put": {
				"tags": [
					"alarm"
				],
				"operationId": "alarmNotificationIdOperationPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"activate",
								"deactivate"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/notificationManagement/{id}": {
			"get": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to get a notification rule.",
				"operationId": "alarmNotificationIdGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"put": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to update a notification rule.",
				"operationId": "alarmNotificationIdPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "struct.",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/monitoring_id_body"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"delete": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to delete a notification rule.",
				"operationId": "alarmNotificationIdDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/notificationManagement/{id}/fork": {
			"post": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to fork a notification rule.",
				"operationId": "alarmNotificationIdForkPOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Version.",
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/notificationManagement/{id}/export": {
			"post": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to export a notification to a file.",
				"operationId": "alarmNotificationIdExportPOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/notificationManagement/{id}/clone/{name}": {
			"post": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to clone a notification rule.",
				"operationId": "alarmNotificationIdClonePOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Version",
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/alarm/notificationManagement/importFile": {
			"post": {
				"tags": [
					"alarm"
				],
				"description": "This method is used by the ACS to import a notification rule.",
				"operationId": "alarmNotificationImportFilePOST",
				"requestBody": {
					"description": "file",
					"content": {
						"application/xml": {
							"schema": {
								"type": "string",
								"format": "binary"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/workflowSetup/workflowList": {
			"get": {
				"tags": [
					"provisioning"
				],
				"summary": "workflowSetup",
				"description": "This method is used by the ACS to get all workflowSetup.",
				"operationId": "workflowSetupListGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/workflowSetup/workflowAdd": {
			"post": {
				"tags": [
					"provisioning"
				],
				"summary": "workflowSetup",
				"description": "This method is used by the ACS to add a workflowSetup",
				"operationId": "workflowSetupAddPOST",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/configuration_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/workflowSetup/{id}/{operation}": {
			"put": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to activate or deactivate the workflowSetup.",
				"operationId": "workflowSetupIdOperationPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"activate",
								"deactivate"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully"
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/workflowSetup/{id}": {
			"get": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to get workflowSetup by id.",
				"operationId": "workflowSetupIdGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"put": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to update workflowSetup by id.",
				"operationId": "workflowSetupIdPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/configuration_configurationId_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "The request was performed successfully"
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"delete": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to delete the workflowSetup.",
				"operationId": "workflowSetupIdDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully"
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/workflowSetup/{id}/fork": {
			"post": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to fork the workflowSetup.",
				"operationId": "workflowSetupIdForkPOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Version.",
					"content": {
						"application/*": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/workflowSetup/{id}/export": {
			"post": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to export the workflowSetup.",
				"operationId": "workflowSetupIdExportPOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/workflowSetup/{id}/clone/{name}": {
			"post": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to clone the workflowSetup.",
				"operationId": "workflowSetupIdCloneNamePOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Version.",
					"content": {
						"application/octet-stream": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "The request was performed successfully"
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/workflowSetup/importFile": {
			"post": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to import the workflowSetup.",
				"operationId": "workflowSetupImportFilePOST",
				"requestBody": {
					"description": "file",
					"content": {
						"application/xml": {
							"schema": {
								"type": "string",
								"format": "binary"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "The request was performed successfully"
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/operationSetup/operationList": {
			"get": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to get all operations.",
				"operationId": "operationListGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/operationSetup/operationAdd": {
			"post": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to add a operation",
				"operationId": "operationAddPOST",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/operation_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/operationSetup/{id}": {
			"get": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to get operation by id.",
				"operationId": "operationIdGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"put": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to update operation by id.",
				"operationId": "operationIdPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/operation_operationId_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "The request was performed successfully"
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"delete": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to delete the operation.",
				"operationId": "operationIdDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully"
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/operationSetup/{id}/clone/{name}": {
			"post": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to clone a operation",
				"operationId": "operationClonePost",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/operationSetup/{id}/fork": {
			"post": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to fork a operation",
				"operationId": "operationForkPost",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/operationSetup/{id}/{operation}": {
			"put": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to activate or deactivate the operation.",
				"operationId": "operationIdActivePUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operation",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"activate",
								"deactivate"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully"
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/scriptSetup/scriptList": {
			"get": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to get script",
				"operationId": "scriptListGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/scriptSetup/scriptAdd": {
			"post": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to add script.",
				"operationId": "scriptAddPUT",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": false
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/scriptSetup/scriptCount": {
			"get": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to get script count.",
				"operationId": "scriptCountGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/scriptSetup/{id}": {
			"get": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to get script by id.",
				"operationId": "scriptIdGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"delete": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to delete script by id.",
				"operationId": "scriptIdDELETE",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"put": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to update script by id.",
				"operationId": "scriptIdPUT",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": false
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/fileSetup/fileList": {
			"get": {
				"tags": [
					"provisioning"
				],
				"description": "This method is used by the ACS to list files records managed by the server.",
				"operationId": "fileListGET",
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/provisioning/fileSetup/fileUpdate": {
			"put": {
				"tags": [
					"provisioning"
				],
				"summary": "updateFile",
				"description": "This method is used by the ACS to update a file record.",
				"operationId": "fileUpdatePUT",
				"requestBody": {
					"description": "File info body.",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server_files_body"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/provisioning/fileSetup/fileAdd": {
			"post": {
				"tags": [
					"provisioning"
				],
				"summary": "addServerFile",
				"description": "This method is used by the ACS to add a file record to the server.",
				"operationId": "filesAddPOST",
				"requestBody": {
					"description": "File info body.",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/server_files_body_1"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/provisioning/fileSetup/{fileId}/delete": {
			"delete": {
				"tags": [
					"provisioning"
				],
				"summary": "deleteFile",
				"description": "This method is used by the ACS to remove a server file record.",
				"operationId": "fileByIdDELETE",
				"parameters": [
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/groupList": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"summary": "getAllDeviceGroup",
				"description": "This method is used by the ACS to list all groups.",
				"operationId": "deviceGroupListGET",
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/device/groupAdmin/groupAllCount": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"summary": "getAllDeviceGroupCount",
				"description": "This method is used by the ACS to get all groups count.",
				"operationId": "deviceGroupCountGET",
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/device/groupAdmin/searchDevice": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to search devices",
				"operationId": "deviceGroupSearchDeviceGET",
				"parameters": [
					{
						"name": "searchType",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "OUI"
					},
					{
						"name": "searchValue",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "B4EEB4"
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/edit": {
			"post": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to edit device group.",
				"operationId": "editDeviceGroupPOST",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{parameter}": {
			"post": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to import device sn/imei/msisdn list and create a new group.",
				"operationId": "deviceGroupParameterPOST",
				"parameters": [
					{
						"name": "parameter",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"sn",
								"imei",
								"msisdn"
							]
						}
					},
					{
						"name": "groupName",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "autoFiltering",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"description": "sn/imei/msisdn list.",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/groupInfo": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to get detail information of the group by id.",
				"operationId": "deviceGroupIdGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/device/groupAdmin/{id}/delete": {
			"delete": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to delete a group.",
				"operationId": "deviceGroupIdDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/device/groupAdmin/{id}/addItem": {
			"put": {
				"tags": [
					"deviceGroup"
				],
				"summary": "addItemToDevGroup",
				"description": "This method is used by the ACS to add a device to a group.",
				"operationId": "deviceGroupIdAddItemPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "groupId.",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "add a device to group.by Serial Number or IMEI or MSISDN.",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"example": "{\"Serial Number\":\"123456\"}"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/struct": {
			"delete": {
				"tags": [
					"deviceGroup"
				],
				"summary": "deleteItemFromDevGroup",
				"description": "This method is used by the ACS to delete a device from a group.",
				"operationId": "deviceGroupIdStructDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "serialNumber",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "oui",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "productClass",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/snFile": {
			"put": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to update a group.",
				"operationId": "deviceGroupIdSnFilePUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "autoFiltering",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"description": "sn list",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/imeiFile": {
			"put": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to update a group by imei file.",
				"operationId": "deviceGroupIdImeiFilePUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "autoFiltering",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"description": "imei list",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/device/groupAdmin/{id}/msisdnFile": {
			"put": {
				"tags": [
					"deviceGroup"
				],
				"operationId": "deviceGroupIdMsisdnFilePUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "autoFiltering",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"description": "msisdn list",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/rename": {
			"put": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to update group name.",
				"operationId": "deviceGroupIdGroupRenamePUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "group Rename",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/id_groupRename_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/device/groupAdmin/{groupName}/configuration": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"summary": "group_get_config_by_groupname",
				"description": "group_get_config_by_groupname",
				"operationId": "deviceGroupGroupNameConfigurationGET",
				"parameters": [
					{
						"name": "groupName",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/dataModel": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"summary": "group_datamodel",
				"description": "get group datamodel",
				"operationId": "deviceGroupIdDataModelGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/addOperation/": {
			"post": {
				"tags": [
					"deviceGroup"
				],
				"summary": "addDevGroupOperation",
				"description": "This method is used by the ACS to add a operation for the group.",
				"operationId": "deviceGroupIdOperationsPOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "operation list",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/pendingOperationList": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to get all pending operations of the group.",
				"operationId": "pendingOperationListGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "filter",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "created,desc"
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/pendingOperationCount": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"summary": "group_operations_count",
				"description": "This method is used by the ACS to get the group operation count.",
				"operationId": "pendingOperationCountGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/pendingOperation/detail/{operationid}": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to get a item from the group operation log.",
				"operationId": "pendingOperationDetailGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operationid",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error.."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/pendingOperation/{operationid}/cancel": {
			"put": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to cancel the group pending operation.",
				"operationId": "pendingOperationOperationidCancelPUT",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operationid",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/operationLogList": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"summary": "get_group_operations_log",
				"description": "This method is used by the ACS to get the group operation logs.",
				"operationId": "deviceGroupIdOperationLogListGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "filter",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "created,desc"
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/operationLog/delAll": {
			"delete": {
				"tags": [
					"deviceGroup"
				],
				"summary": "deleteDevGroupOperationlogs",
				"description": "This method is used by the ACS to delete the group operation log.",
				"operationId": "deviceGroupIdOperationsLogAllDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/operationLog/deleteMany": {
			"post": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to delete the group operation log.",
				"operationId": "deviceGroupOperationsLogDelManyPOST",
				"parameters": [
					{
						"name": "operationIds",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/operationLogCount": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"summary": "group_operations_log_count",
				"description": "This method is used by the ACS to get the group operation logs count.",
				"operationId": "deviceGroupIdOperationLogCountGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "groudId",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "filter",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/device/groupAdmin/{id}/operationLog/{logid}": {
			"delete": {
				"tags": [
					"deviceGroup"
				],
				"summary": "deleteDevGroupOperationlog",
				"description": "This method is used by the ACS to delete a item from the group operation log.",
				"operationId": "deviceGroupIdOperationLogLogidDELETE",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "logid",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error.."
					}
				}
			},
			"get": {
				"tags": [
					"deviceGroup"
				],
				"summary": "get deviceGroup OperationsLog by Logid",
				"description": "This method is used by the ACS to get a item from the group operation log.",
				"operationId": "deviceGroupIdOperationLogLogidGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "logid",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error.."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/maps/rfcoverageInfo": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"summary": "get deviceGroup maps by groupid",
				"description": "This method is used by the ACS to get a deviceGroup map.",
				"operationId": "deviceGroupIdMapGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error.."
					}
				}
			},
			"post": {
				"tags": [
					"deviceGroup"
				],
				"summary": "get deviceGroup maps by groupid",
				"description": "This method is used by the ACS to update a deviceGroup map.",
				"operationId": "deviceGroupIdMapPOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error.."
					}
				}
			}
		},
		"/device/groupAdmin/{groupId}/wifi/clientList": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to get wifi clientList by productId.",
				"operationId": "deviceWifiClientGET",
				"parameters": [
					{
						"name": "groupId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/{id}/activeAlarms/byFilters": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to get the active alarms of the deviceGroup by specified filtering parameters.",
				"operationId": "deviceGroupIdActiveAlarmsByFiltersGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
        "/device/groupAdmin/{id}/historyAlarms/byFilters": {
			"get": {
				"tags": [
					"deviceGroup"
				],
				"description": "This method is used by the ACS to get the active alarms of the deviceGroup by specified filtering parameters.",
				"operationId": "deviceGroupIdHistoryAlarmsByFiltersGET",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/groupAdmin/create": {
			"post": {
				"tags": [
					"deviceGroup"
				],
				"description": "create device Group from deviceList page.",
				"operationId": "deviceGroupCreatePOST",
				"parameters": [
					{
						"name": "groupName",
						"in": "query",
						"description": "groupName",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "scopeType",
						"in": "query",
						"description": "scopeType",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"enum": [
								"device",
								"user"
							]
						}
					}
				],
				"requestBody": {
					"description": "Device info struct.",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/deviceGroup_body"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "The request sent by the client has a syntax error"
					}
				}
			}
		},
		"/device/deviceAdmin/deviceList": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get the list of devices by specified filtering parameters.",
				"operationId": "deviceFindByFiltersGET",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"example": 0
					},
					{
						"name": "turnPage",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"example": 0
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						},
						"example": 10
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "lastConnected,desc"
					},
					{
						"name": "serial",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "time",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "filter",
						"in": "query",
						"required": false,
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"x-content-type": "application/json"
								},
								"example": "{\"firmwareVersion\":\"1.2\"}"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/deviceAllCount": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get the device all count.",
				"operationId": "deviceAllCountGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/addTag": {
			"post": {
				"tags": [
					"device"
				],
				"description": "tagsAdd",
				"operationId": "devicetagsPOST",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/device_tags_body"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/updateTag": {
			"put": {
				"tags": [
					"device"
				],
				"description": "tagsUpdate",
				"operationId": "devicetagsPUT",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/device_tags_body"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/deleteTag": {
			"put": {
				"tags": [
					"device"
				],
				"description": "tagsDelete",
				"operationId": "devicetagsDELETE",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/device_tags_body"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/register": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to register a device.",
				"operationId": "deviceRegisterPOST",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/device_register_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					},
					"500": {
						"description": "Data find fail."
					}
				}
			}
		},
		"/device/deviceAdmin/batchRegister": {
			"post": {
				"tags": [
					"device"
				],
				"description": "batchRegister",
				"operationId": "deviceRegisterBatchPOST",
				"parameters": [
					{
						"name": "deviceType",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "autoFiltering",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/device_register_body"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}": {
			"delete": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to delete the device.",
				"operationId": "deviceDeviceIdDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/unregister": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to delete a list of devices.",
				"operationId": "deviceUnregisterPOST",
				"requestBody": {
					"description": "deviceId list.",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/Unregister": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to delete a list of devices.",
				"operationId": "deviceUnregisterPOST",
				"requestBody": {
					"description": "deviceId list.",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/connectionRequest": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to execute connect request to the device.",
				"operationId": "deviceDeviceIdConnectionRequestGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/reboot": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to execute reboot command to the device.",
				"operationId": "deviceDeviceIdRebootPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/factoryReset": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to execute factory-reset command to the device.",
				"operationId": "deviceDeviceIdFactoryResetPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/firmware/latest": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get the latest firmware of the device.",
				"operationId": "deviceDeviceIdFirmwareLatestGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/download/{fileId}": {
			"post": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdDownloadFileIdPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/logs/upload": {
			"post": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdLogsUploadPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/addOperation/": {
			"post": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdAddOperationPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "operation list",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/bulkData/profileList": {
			"get": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdBulkDataProfileListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"put": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdBulkDataProfileListPUT",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Bulk Data ProfileList",
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/bulkData/profile": {
			"post": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdBulkDataProfilePOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Bulk Data Profile",
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"put": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdBulkDataProfilePUT",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Bulk Data Profile",
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/updateAttribute/{name}": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to edit attribute of the device.",
				"operationId": "deviceDeviceIdAttributesNamePOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Attribute value body.",
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/deleteAttribute/{name}": {
			"delete": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to delete the attribute of the device.",
				"operationId": "deviceDeviceIdAttributesNameDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/controllerList": {
			"get": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdControllerListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/getAttributes": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get device attributes.",
				"operationId": "deviceDeviceIdAttributesGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/updateAttribute": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to edit provisioning attributes of the device.",
				"operationId": "deviceDeviceIdUpdateAttributePOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "attribute data.",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/deviceId_attribute_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/label": {
			"put": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdLabelPUT",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/deviceInfo": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get the info of the device.",
				"operationId": "deviceDeviceIdDeviceInfoGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/getFiles": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get managed files of the device.",
				"operationId": "deviceDeviceIdFilesGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/getGroup": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get refer group info of the device.",
				"operationId": "deviceDeviceIdGroupsGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/getProduct": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get refer product info of the device.",
				"operationId": "deviceDeviceIdProductGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/initProvision/request": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to update the special 3gpp operation of the device.",
				"operationId": "deviceDeviceIdInitProvisionPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get the special 3gpp operation of the device.",
				"operationId": "deviceDeviceIdInitProvisionGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/applyProvision/request": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to apply the special 3gpp operation of the device.",
				"operationId": "deviceApplyProvisionPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/xmlMessage": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to send xml message to device",
				"operationId": "deviceDeviceIdXmlMessagePOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get the xml message response of the device.",
				"operationId": "deviceDeviceIdXmlMessageReponseGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/{isActive}": {
			"put": {
				"tags": [
					"device"
				],
				"operationId": "deviceDeviceIdActivatePUT",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"activate",
								"deactivate"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/gotoDeviceInfo": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get the info of the device by the deviceStruct.",
				"operationId": "deviceGotoDeviceInfoGET",
				"parameters": [
					{
						"name": "deviceIdStruct",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/deviceAdmin/{deviceId}/mesh/relationship": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get mesh relationship of the device.",
				"operationId": "deviceMeshRelationshapGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/dataModel/addOperation/": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to excute rpc on the datamodel of the usp device.",
				"operationId": "dataModelDatamodelOperPost",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/dataModel/{deviceId}/": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to query the data model of the device.",
				"operationId": "dataModelDeviceIdGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/dataModel/{deviceId}/parameter/{method}": {
			"post": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to refresh the data model of the device.",
				"operationId": "dataModelDeviceIdParameterMethodPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "method",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string",
							"enum": [
								"value",
								"notification",
								"accessList"
							]
						}
					}
				],
				"requestBody": {
					"description": "attribute data.",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/parameter_method_body"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/dataModel/{deviceId}/discover/{item}": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to refresh the data model of the device.",
				"operationId": "dataModelDeviceIdDiscoverItemGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "item",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/dataModel/{deviceId}/discover": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to refresh the data model of the netconf device.",
				"operationId": "dataModelDeviceIdDiscoverConfItem",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/dataModel/uspCommon/getDataModel": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get usp dataModel.",
				"operationId": "deviceUspDataModelGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/yangModule/moduleList": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get netconf yangModule list.",
				"operationId": "deviceYangModuleListGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/yangModule/notification": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get netconf yangModule notification.",
				"operationId": "deviceYangModuleNotificationGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/yangModule/moduleInfo": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get netconf refer yangModule info.",
				"operationId": "deviceYangModuleInfolGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/alarmManagement/{deviceId}/activeAlarms/byFilters": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get the active alarms of the device by specified filtering parameters.",
				"operationId": "deviceDeviceIdActiveAlarmsByFiltersGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"minimum": 10,
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "EventTime,desc"
					},
					{
						"name": "filter",
						"in": "query",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						},
						"example": "{\"severity\":\"Warning\"}"
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/alarmManagement/activeAlarms/ack/{id}": {
			"post": {
				"tags": [
					"device"
				],
				"operationId": "deviceActiveAlarmsAckIdPOST",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/alarmManagement/activeAlarms/ackMany": {
			"post": {
				"tags": [
					"device"
				],
				"operationId": "deviceActiveAlarmsAckManyPOST",
				"requestBody": {
					"description": "Event id list.",
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/alarmManagement/{deviceId}/historyAlarms/byFilters": {
			"get": {
				"tags": [
					"device"
				],
				"description": "This method is used by the ACS to get the history alarms of the device by specified filtering parameters.",
				"operationId": "deviceDeviceIdHistoryAlarmsByFiltersGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/remoteTroubleshooting/{deviceId}/register": {
			"post": {
				"tags": [
					"troubleshooting"
				],
				"operationId": "troubleshootingRegisterPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/remoteTroubleshooting/{deviceId}/unregister": {
			"post": {
				"tags": [
					"troubleshooting"
				],
				"operationId": "troubleshootingUnregisterPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/remoteTroubleshooting/{deviceId}/polling": {
			"post": {
				"tags": [
					"troubleshooting"
				],
				"operationId": "troubleshootingPollingPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/remoteTroubleshooting/{deviceId}/saveMsg": {
			"post": {
				"tags": [
					"troubleshooting"
				],
				"operationId": "troubleshootingSaveMsgPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/remoteTroubleshooting/{deviceId}/forceDisconnect": {
			"post": {
				"tags": [
					"troubleshooting"
				],
				"operationId": "troubleshootingForceDisconnectPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/specialSessionLog": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get the session log of the device.",
				"operationId": "specialSessionLogListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/sessionLogList": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get the session log of the device.",
				"operationId": "sessionLogListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/sessionLogCount": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get the count of session logs of the device.",
				"operationId": "sessionLogCountGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/sessionLog/delete/{sessionId}": {
			"delete": {
				"tags": [
					"logCollection"
				],
				"description": "session log",
				"operationId": "sessionLogDeleteSessionIdDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sessionId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/sessionLog/detail/{sessionId}": {
			"get": {
				"tags": [
					"logCollection"
				],
				"operationId": "sessionLogDetailSessionIdGET",
				"parameters": [
					{
						"name": "sessionId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/sessionLog/deleteAll": {
			"delete": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to delete all session logs of the device.",
				"operationId": "sessionLogDeleteAllDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/sessionLog/deleteMany": {
			"put": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to delete many session logs of the device.",
				"operationId": "sessionLogDeleteManyDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/sessionLog/export": {
			"post": {
				"tags": [
					"logCollection"
				],
				"description": "sessionExport",
				"operationId": "sessionLogExportPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/pendingOperationList": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get device pending task.",
				"operationId": "pendingOperationListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/pendingOperationCount": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get count of the pending tasks of a device.",
				"operationId": "pendingOperationCountGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/pendingOperation/{operationId}/cancel": {
			"put": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to delete a task.",
				"operationId": "pendingOperationOperationIdCancelPUT",
				"parameters": [
					{
						"name": "operationId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/pendingOperation/cancelAll": {
			"put": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to delete tasks from a device.",
				"operationId": "pendingOperationCancelAllPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/operationsLogList": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get the device operation logs.",
				"operationId": "operationsLogListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/operationsLogCount": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get the count of operation logs of the device.",
				"operationId": "operationsLogCountGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/operationsLog/delete/{logId}": {
			"delete": {
				"tags": [
					"logCollection"
				],
				"description": "operations log",
				"operationId": "operationsLogDeleteLogIdDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "logId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/operationsLog/deleteAll": {
			"delete": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to delete all operation logs of the device.",
				"operationId": "operationsLogDeleteAllDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/callLogList": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get the call log of the device.",
				"operationId": "callLogListDeviceIdGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/reportList": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get the device report logs with device��s product type and id.",
				"operationId": "deviceReportListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/reportCount": {
			"get": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to get the report count of the device.",
				"operationId": "deviceReportCountGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/reportGenerate": {
			"post": {
				"tags": [
					"logCollection"
				],
				"description": "This method is used by the ACS to generate device report.",
				"operationId": "deviceReportGeneratePOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/report/export/{reportId}": {
			"post": {
				"tags": [
					"logCollection"
				],
				"operationId": "deviceReportExportOnePOST",
				"parameters": [
					{
						"name": "reportId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "format",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"enum": [
								"txt",
								"csv",
								"xlsx"
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/report/delete/{reportId}": {
			"delete": {
				"tags": [
					"logCollection"
				],
				"operationId": "deviceReportReportIdDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "reportId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/report/deleteAll": {
			"delete": {
				"tags": [
					"logCollection"
				],
				"operationId": "deviceReportAllDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/logCollection/{deviceId}/bulkDataHistory": {
			"get": {
				"tags": [
					"logCollection"
				],
				"operationId": "deviceBulkDataHistoryGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/basicInfo": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get device basic information with device ID (The device ID is available from section 2.2.1",
				"operationId": "generalDataBasicInfoGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/memoryCpuUsage": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get MemoryCpuUsage.",
				"operationId": "deviceMemoryCpuUsageGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/networkLocation/{deviceId}/locationInfo": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the location info of the device.",
				"operationId": "deviceDeviceIdLocationInfoGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"description": "deviceId",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"put": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to update the location info of the device.",
				"operationId": "deviceDeviceIdLocationInfoPUT",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"description": "deviceId",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/networkLocation/{deviceId}/location": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the location of the device.",
				"operationId": "deviceDeviceIdLocationGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"description": "deviceId",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"post": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to refresh the location of the device.",
				"operationId": "deviceDeviceIdLocationPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"description": "deviceId",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/networkLocation/{deviceId}/networkMapInfo": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the netword map info of the device.",
				"operationId": "deviceDeviceIdNetwork_mapInfoGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/networkLocation/{deviceId}/routerInfo": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the router info of the device.",
				"operationId": "deviceDeviceIdRouterInfoGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/statisticalAnalysis/{deviceId}/dataUsage": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the data usage of the device.",
				"operationId": "deviceDeviceIdDataUsageGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/statisticalAnalysis/{deviceId}/connectedHosts": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the connected hosts of the device.",
				"operationId": "deviceDeviceIdConnectedHostsGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/dataCollect/{item}": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the param dataCollect of the device.",
				"operationId": "deviceDeviceIdDataCollectGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "item",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/statusCollect/{item}": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the param statusCollect of the device.",
				"operationId": "deviceDeviceIdStatusCollectGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "item",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/speed": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the spped log of the device.",
				"operationId": "deviceDeviceIdSpeedGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"post": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to save the upload and download speed of the device.",
				"operationId": "deviceDeviceIdSpeedPOST",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/speed/deleteAll": {
			"delete": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to delete all spped logs of the device.",
				"operationId": "deviceDeviceAllSpeedDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
        "/device/generalData/{deviceId}/speed/delete/{speedId}": {
			"delete": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to delete the spped log of the device.",
				"operationId": "deviceDeviceIdSpeedDELETE",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "speedId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/deviceInfo": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the info of the device.",
				"operationId": "generalDataDeviceIdDeviceInfoGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/errors": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceDeviceIdErrorsGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/localAgent/controller": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the localAgent controller of the device.",
				"operationId": "deviceLocalAgentControllerGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/localAgent/subscription": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the localAgent subscription of the device.",
				"operationId": "deviceLocalAgentSubscriptionGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/localAgent/mtp": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the localAgent mtp of the device.",
				"operationId": "deviceLocalAgentMtpGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/generalData/{deviceId}/connectionHistory": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the connection History of the device.",
				"operationId": "deviceConnectionHistoryGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/wifiSpecific/{deviceId}/wifiStatus": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the wifi status of the device.",
				"operationId": "deviceInfoWifiStatusGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/wifiSpecific/{deviceId}/radioStatus": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoRadioStatusGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/wifiSpecific/{deviceId}/wifiAssociateDevInfo": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get wifiAssociateDevInfo.",
				"operationId": "deviceWifiAssociateDevInfoGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/wifiSpecific/{deviceId}/wifiChannelScanner": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get wifiChannelScanner.",
				"operationId": "deviceWifiChannelScannerGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/wifiSpecific/{deviceId}/wifiStation": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get wifiStation.",
				"operationId": "deviceWifiStationGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/wifiSpecific/{deviceId}/linkRateHistory": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get linkRateHistory.",
				"operationId": "deviceLinkRateHistoryGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The request was performed successfully."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/cellularSpecific/{deviceId}/deviceStatus": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the status of the device.",
				"operationId": "deviceInfoCellularStatusGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/cellularSpecific/{deviceId}/deviceNRCellStatus": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the status of the device.",
				"operationId": "deviceInfoSmallCellCellularStatusGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/cellularSpecific/{deviceId}/deviceSAStatus": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the SA status of the device.",
				"operationId": "deviceInfoSAStatusGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/fapSpecific/{deviceId}/PLMNList": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoPLMNListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/fapSpecific/{deviceId}/Spectrum": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoSpectrumGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/fapSpecific/{deviceId}/connectivity": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoConnectivityGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/appSpecific/{deviceId}/lxc": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoLxcGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/fapSpecific/{deviceId}/neighborList": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoNeighborListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/fapSpecific/{deviceId}/neighbor": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoNeighborGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/appSpecific/{deviceId}/appList": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoAppListGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/appSpecific/{deviceId}/serviceProvider": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoServiceProviderGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/appSpecific/{deviceId}/softwareManagement": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoSoftwareManagementGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/appSpecific/{deviceId}/appStatus": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoAppStatusGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/cellularSpecific/{deviceId}/simCardInfo": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"description": "This method is used by the ACS to get the simCard info of the device.",
				"operationId": "deviceInfoSimCardInfoGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/device/imsSpecific/{deviceId}/regStatus": {
			"get": {
				"tags": [
					"deviceInfo"
				],
				"operationId": "deviceInfoRegStatusGET",
				"parameters": [
					{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/common/softVersion": {
			"get": {
				"tags": [
					"common"
				],
				"description": "Successful operation.",
				"operationId": "commonSoftVersionGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/common/information": {
			"get": {
				"tags": [
					"common"
				],
				"description": "Successful operation.",
				"operationId": "commonInformationGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/common/time": {
			"get": {
				"tags": [
					"common"
				],
				"description": "Successful operation.",
				"operationId": "commonTimeGET",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		},
		"/common/user": {
			"get": {
				"tags": [
					"common"
				],
				"description": "Get avatar.",
				"operationId": "commonUserGET",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			},
			"put": {
				"tags": [
					"common"
				],
				"description": "Change password or avatar.",
				"operationId": "commonUserPUT",
				"responses": {
					"200": {
						"description": "Successful operation."
					},
					"400": {
						"description": "The request sent by the client has a syntax error."
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"scope_attribute_body": {
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			},
			"server_files_body_1": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"fileType": {
						"type": "string",
						"enum": [
							"1 Firmware Upgrade Image",
							"2 Web Content",
							"3 Vendor Configuration File",
							"4 Tone File",
							"5 Ringer File"
						]
					},
					"url": {
						"type": "string"
					},
					"targetName": {
						"type": "string"
					},
					"fileSize": {
						"minimum": 0,
						"exclusiveMinimum": true,
						"type": "integer",
						"format": "int64"
					},
					"description": {
						"type": "string"
					},
					"scope": {
						"type": "string"
					}
				}
			},
			"monitoring_id_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"version": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"schedule": {
						"type": "object"
					},
					"scope": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"stages": {
						"type": "object"
					},
					"firstStage": {
						"type": "string"
					},
					"target": {
						"type": "object"
					}
				}
			},
			"parameter_method_body": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			},
			"deviceId_bulkDataRule_body_1": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"node": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				}
			},
			"deviceId_attribute_body": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			},
			"preferences_server_body": {
				"properties": {
					"name": {
						"type": "string"
					}
				}
			},
			"report_summary_body": {
				"type": "object",
				"properties": {
					"currentproduct": {
						"type": "string"
					},
					"startFrom": {
						"type": "string"
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/dmsreportsummary_entries"
						}
					}
				}
			},
			"id_discoveringList_body_1": {
				"properties": {
					"name": {
						"type": "string"
					},
					"discoveringParameterList": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"diagnostics_body": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"parameters": {
						"type": "string"
					},
					"templateId": {
						"type": "string"
					},
					"dataScope": {
						"type": "string"
					}
				}
			},
			"monitoring_body": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"version": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				}
			},
			"configurationconfigurationId_schedule": {
				"type": "object",
				"properties": {
					"standardTime": {
						"type": "string"
					},
					"validFrom": {
						"type": "string"
					},
					"validUntil": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"windowEndMinute": {
						"type": "string"
					},
					"windowStart": {
						"type": "string"
					},
					"windowStartMinute": {
						"type": "string"
					}
				}
			},
			"operations_deviceIdStruct": {
				"type": "object",
				"properties": {
					"manufacturer": {
						"type": "string"
					},
					"oui": {
						"type": "string"
					},
					"productClass": {
						"type": "string"
					},
					"serialNumber": {
						"type": "string"
					}
				}
			},
			"diagnostics_template_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"configurationObject": {
						"type": "string"
					},
					"resultsObject": {
						"type": "string"
					},
					"stateParameter": {
						"type": "string"
					},
					"requestStateValue": {
						"type": "string"
					},
					"requestParameters": {
						"type": "string"
					},
					"resultParameters": {
						"type": "string"
					},
					"productId": {
						"type": "string"
					},
					"scope": {
						"type": "string"
					}
				}
			},
			"itemId_addToMsisdn_body": {
				"properties": {
					"msisdn": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"server_files_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"fileType": {
						"type": "string",
						"enum": [
							"1 Firmware Upgrade Image",
							"2 Web Content",
							"3 Vendor Configuration File",
							"4 Tone File",
							"5 Ringer File"
						]
					},
					"url": {
						"type": "string"
					},
					"targetName": {
						"type": "string"
					},
					"fileSize": {
						"minimum": 0,
						"exclusiveMinimum": true,
						"type": "integer",
						"format": "int64"
					},
					"description": {
						"type": "string"
					},
					"scope": {
						"type": "string"
					}
				}
			},
			"deviceGroupidoperations_message": {
				"type": "object",
				"properties": {
					"messageType": {
						"type": "string",
						"example": "SetParameterValues"
					}
				}
			},
			"bulkData_profile_body_1": {
				"properties": {
					"entries": {
						"type": "array",
						"items": {
							"type": "object"
						}
					}
				}
			},
			"user_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"example": "64ec101b5d4fb13e8daab92d",
						"required": true
					},
					"name": {
						"type": "string",
						"example": "test-user",
						"required": true
					},
					"password": {
						"type": "string",
						"example": "123456a!"
					},
					"expirationDate": {
						"type": "string",
						"example": "2023-08-08T16:00:00.000Z"
					},
					"isActive": {
						"type": "boolean",
						"default":true
					},
					"roles": {
						"type": "array",
						"example":["USER"],
						"required": true,
						"items": {
							"type": "string"
						},
						"discription": "use role,available values:ROLE_ADMIN, ROLE_MANAGER, ROLE_POWERUSER, ROLE_USER"
						
					},
					"productName": {
						"type": "array",
						"example":["LRT"],
						"items": {
							"type": "string"
						},
						"required": true
					},
					"authorityList": {
						"type": "array",
						"example":"{\"name\":\"harvey\",\"id\":\"64ec101b5d4fb13e8daab92d\",\"expirationDate\":\"2023-08-08T16:00:00.000Z\",\"roles\":[\"MANAGER\"],\"productName\":[\"LRT\"],\"authorityList\":[{\"class\":\"device\",\"subClassList\":[{\"subClass\":\"deviceAdmin\",\"read\":true,\"write\":true},{\"subClass\":\"productAdmin\",\"read\":true,\"write\":true},{\"subClass\":\"groupAdmin\",\"read\":true,\"write\":true},{\"subClass\":\"generalData\",\"read\":true,\"write\":true},{\"subClass\":\"alarmManagement\",\"read\":true,\"write\":true},{\"subClass\":\"remoteTroubleshooting\",\"read\":true,\"write\":true},{\"subClass\":\"dataModel\",\"read\":true,\"write\":true},{\"subClass\":\"networkLocation\",\"read\":true,\"write\":true},{\"subClass\":\"logCollection\",\"read\":true,\"write\":true},{\"subClass\":\"statisticalAnalysis\",\"read\":true,\"write\":true},{\"subClass\":\"wifiSpecific\",\"read\":true,\"write\":true},{\"subClass\":\"cellularSpecific\",\"read\":true,\"write\":true},{\"subClass\":\"fapSpecific\",\"read\":true,\"write\":true},{\"subClass\":\"appSpecific\",\"read\":true,\"write\":true},{\"subClass\":\"imsSpecific\",\"read\":true,\"write\":true},{\"subClass\":\"yangModule\",\"read\":true,\"write\":true}]},{\"class\":\"alarm\",\"subClassList\":[{\"subClass\":\"deviceAlarm\",\"read\":true,\"write\":true},{\"subClass\":\"notificationManagement\",\"read\":true,\"write\":true}]},{\"class\":\"provisioning\",\"subClassList\":[{\"subClass\":\"workflowSetup\",\"read\":true,\"write\":true},{\"subClass\":\"operationSetup\",\"read\":true,\"write\":true},{\"subClass\":\"scriptSetup\",\"read\":true,\"write\":true},{\"subClass\":\"fileSetup\",\"read\":true,\"write\":true}]},{\"class\":\"user\",\"subClassList\":[{\"subClass\":\"accountAdmin\",\"read\":true,\"write\":true},{\"subClass\":\"accountLog\",\"read\":true,\"write\":true}]},{\"class\":\"analysis\",\"subClassList\":[{\"subClass\":\"deviceStatistics\",\"read\":true,\"write\":true}]},{\"class\":\"addOn\",\"subClassList\":[{\"subClass\":\"personalTheme\",\"read\":true,\"write\":true},{\"subClass\":\"reportExport\",\"read\":true,\"write\":true}]}],\"isActive\":true}",
						"items": {
							"type": "object"
						}
					}
				}
			},
			"discoveringList_body_1": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"discoveringParameterList": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"scope": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				}
			},
			"uspoperations_entries": {
				"type": "object",
				"properties": {
					"message": {
						"type": "object"
					}
				}
			},
			"id_attribute_body": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			},
			"device_register_body_1": {
				"required": [
					"oui",
					"productClass",
					"serialNumber"
				],
				"type": "object",
				"properties": {
					"oui": {
						"type": "string"
					},
					"serialNumber": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"productClass": {
						"type": "string"
					}
				}
			},
			"id_files_body_1": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"fileType": {
						"type": "string",
						"enum": [
							"1 Firmware Upgrade Image",
							"2 Web Content",
							"3 Vendor Configuration File",
							"4 Tone File",
							"5 Ringer File"
						]
					},
					"url": {
						"type": "string"
					},
					"targetName": {
						"type": "string"
					},
					"fileSize": {
						"minimum": 0,
						"exclusiveMinimum": true,
						"type": "integer",
						"format": "int64"
					},
					"description": {
						"type": "string"
					},
					"scope": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"diagnostics_body_1": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"parameters": {
						"type": "string"
					},
					"templateId": {
						"type": "string"
					}
				}
			},
			"deviceId_operation_body": {
				"type": "object",
				"properties": {
					"parameterList": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"deviceId_discoveringList_body_1": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"deviceId": {
						"type": "string"
					},
					"discoveringParameterList": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"id_bulkDataRule_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"node": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				}
			},
			"userverifyidp_idpdata": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"groups": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"bulkData_profile_body": {
				"properties": {
					"entries": {
						"type": "array",
						"items": {
							"type": "object"
						}
					}
				}
			},
			"operations_body": {
				"type": "object",
				"properties": {
					"deviceIdStruct": {
						"$ref": "#/components/schemas/operations_deviceIdStruct"
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/operations_entries"
						}
					}
				}
			},
			"preferences_datasource_body": {
				"properties": {
					"name": {
						"type": "string"
					}
				}
			},
			"deviceId_files_body_1": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"fileType": {
						"type": "string",
						"enum": [
							"1 Firmware Upgrade Image",
							"2 Web Content",
							"3 Vendor Configuration File",
							"4 Tone File",
							"5 Ringer File"
						]
					},
					"url": {
						"type": "string"
					},
					"targetName": {
						"type": "string"
					},
					"fileSize": {
						"minimum": 0,
						"exclusiveMinimum": true,
						"type": "integer",
						"format": "int64"
					},
					"description": {
						"type": "string"
					},
					"scope": {
						"type": "string"
					}
				}
			},
			"id_operation_body": {
				"type": "object",
				"properties": {
					"deviceIdStruct": {
						"$ref": "#/components/schemas/uspoperations_deviceIdStruct"
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/uspoperations_entries"
						}
					}
				}
			},
			"configuration_configurationId_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"version": {
						"type": "string"
					},
					"scope": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"schedule": {
						"$ref": "#/components/schemas/configurationconfigurationId_schedule"
					},
					"isActive": {
						"type": "boolean"
					},
					"stages": {
						"type": "object"
					},
					"target": {
						"type": "object"
					}
				}
			},
			"id_files_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"fileType": {
						"type": "string",
						"enum": [
							"1 Firmware Upgrade Image",
							"2 Web Content",
							"3 Vendor Configuration File",
							"4 Tone File",
							"5 Ringer File"
						]
					},
					"url": {
						"type": "string"
					},
					"targetName": {
						"type": "string"
					},
					"fileSize": {
						"minimum": 0,
						"exclusiveMinimum": true,
						"type": "integer",
						"format": "int64"
					},
					"description": {
						"type": "string"
					},
					"scope": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"id_diagnostics_body_1": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"parameters": {
						"type": "string"
					},
					"templateId": {
						"type": "string"
					}
				}
			},
			"user_verifyidp_body": {
				"type": "object",
				"properties": {
					"idpdata": {
						"$ref": "#/components/schemas/userverifyidp_idpdata"
					}
				}
			},
			"uspoperations_deviceIdStruct": {
				"type": "object",
				"properties": {
					"OUI": {
						"type": "string"
					},
					"ProductClass": {
						"type": "string"
					},
					"SerialNumber": {
						"type": "string"
					}
				}
			},
			"configuration_body": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"version": {
						"type": "number"
					},
					"scope": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"isActive": {
						"type": "boolean"
					}
				}
			},
			"id_operations_body_1": {
				"type": "object",
				"properties": {
					"message": {
						"$ref": "#/components/schemas/uspdeviceGroupidoperations_message"
					},
					"priority": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"server_bulkDataRule_body_1": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"node": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				}
			},
			"deviceId_diagnostics_body": {
				"required": [
					"dataScope",
					"description",
					"name",
					"parameters",
					"templateId"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"templateId": {
						"type": "string"
					},
					"parameters": {
						"type": "string"
					},
					"dataScope": {
						"type": "string"
					}
				}
			},
			"id_diagnostics_body": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"parameters": {
						"type": "string"
					}
				}
			},
			"device_register_body": {
				"type": "object",
				"properties": {
					"oui": {
						"type": "string"
					},
					"serialNumber": {
						"type": "string"
					},
					"productClass": {
						"type": "string"
					}
				}
			},
			"bulkData_profileList_body": {
				"properties": {
					"entries": {
						"type": "array",
						"items": {
							"type": "object"
						}
					}
				}
			},
			"uspdeviceGroupgroupIdreportsummary_entries": {
				"type": "object",
				"properties": {
					"key": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"enabled": {
						"type": "string"
					}
				}
			},
			"report_summary_body_2": {
				"type": "object",
				"properties": {
					"currentproduct": {
						"type": "string"
					},
					"startFrom": {
						"type": "string"
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/dmsreportsummary_entries"
						}
					}
				}
			},
			"report_summary_body_1": {
				"properties": {
					"serials": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/uspdeviceGroupgroupIdreportsummary_entries"
						}
					}
				}
			},
			"deviceId_files_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"fileType": {
						"type": "string",
						"enum": [
							"1 Firmware Upgrade Image",
							"2 Web Content",
							"3 Vendor Configuration File",
							"4 Tone File",
							"5 Ringer File"
						]
					},
					"url": {
						"type": "string"
					},
					"targetName": {
						"type": "string"
					},
					"fileSize": {
						"minimum": 0,
						"exclusiveMinimum": true,
						"type": "integer",
						"format": "int64"
					},
					"description": {
						"type": "string"
					},
					"scope": {
						"type": "string"
					}
				}
			},
			"uspdeviceGroupidoperations_message": {
				"type": "object",
				"properties": {
					"messageType": {
						"type": "string",
						"example": "Set"
					}
				}
			},
			"usp_operations_body": {
				"type": "object",
				"properties": {
					"deviceIdStruct": {
						"$ref": "#/components/schemas/uspoperations_deviceIdStruct"
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/uspoperations_entries"
						}
					}
				}
			},
			"server_bulkDataRule_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"node": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				}
			},
			"deviceGroup_body": {
				"type": "object",
				"properties": {
					"oui": {
						"type": "string"
					},
					"productClass": {
						"type": "string"
					},
					"serialNumber": {
						"type": "string"
					},
					"manufacturer": {
						"type": "string"
					},
					"imei": {
						"type": "string"
					},
					"msisdn": {
						"type": "string"
					},
					"MAC": {
						"type": "string"
					},
					"firmwareVersion": {
						"type": "string"
					},
					"TimeZone": {
						"type": "string"
					},
					"scope": {
						"type": "string"
					}
				}
			},
			"itemId_addToSn_body": {
				"properties": {
					"sn": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"productClass_body": {
				"type": "object",
				"properties": {
					"model": {
						"type": "string",
						"example": "LRT"
					},
					"name": {
						"type": "string"
					},
					"oui": {
						"type": "string",
						"example": "B4EEB4"
					},
					"scope": {
						"type": "string",
						"example": "DEFAULT"
					},
					"isActive": {
						"type": "boolean"
					},
					"rootObject": {
						"type": "string",
						"example": "Device."
					}
				}
			},
			"deviceId_attribute_body_1": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			},
			"id_discoveringList_body": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"discoveringParameterList": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"isActive": {
						"type": "boolean"
					}
				}
			},
			"provisioning_report_body": {
				"type": "object",
				"properties": {
					"key": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"matchString": {
						"type": "string"
					}
				}
			},
			"deviceId_bulkDataRule_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"node": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				}
			},
			"deviceId_diagnostics_body_1": {
				"required": [
					"description",
					"name",
					"parameters",
					"templateId"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"templateId": {
						"type": "string"
					},
					"parameters": {
						"type": "string"
					}
				}
			},
			"id_operations_body": {
				"type": "object",
				"properties": {
					"message": {
						"$ref": "#/components/schemas/deviceGroupidoperations_message"
					},
					"priority": {
						"minimum": 0,
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"id_groupRename_body_1": {
				"properties": {
					"newName": {
						"type": "string"
					}
				}
			},
			"preferences_update_body": {
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			},
			"diagnostics_template_body_3": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"configurationObject": {
						"type": "string"
					},
					"resultsObject": {
						"type": "string"
					},
					"stateParameter": {
						"type": "string"
					},
					"requestStateValue": {
						"type": "string"
					},
					"requestParameters": {
						"type": "string"
					},
					"resultParameters": {
						"type": "string"
					},
					"productId": {
						"type": "string"
					}
				}
			},
			"deviceId_discoveringList_body": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"deviceId": {
						"type": "string"
					},
					"discoveringParameterList": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"dmsreportsummary_entries": {
				"type": "object",
				"properties": {
					"enabled": {
						"type": "boolean"
					},
					"key": {
						"type": "string"
					},
					"label": {
						"type": "string"
					}
				}
			},
			"user_body_1": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"confirmPassword": {
						"type": "string"
					},
					"expirationDate": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"roles": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"scope": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"id_groupRename_body": {
				"properties": {
					"newName": {
						"type": "string"
					}
				}
			},
			"diagnostics_template_body_1": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"configurationObject": {
						"type": "string"
					},
					"resultsObject": {
						"type": "string"
					},
					"stateParameter": {
						"type": "string"
					},
					"requestStateValue": {
						"type": "string"
					},
					"requestParameters": {
						"type": "string"
					},
					"resultParameters": {
						"type": "string"
					},
					"productId": {
						"type": "string"
					}
				}
			},
			"id_bulkDataRule_body_1": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"node": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				}
			},
			"diagnostics_template_body_2": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"configurationObject": {
						"type": "string"
					},
					"resultsObject": {
						"type": "string"
					},
					"stateParameter": {
						"type": "string"
					},
					"requestStateValue": {
						"type": "string"
					},
					"requestParameters": {
						"type": "string"
					},
					"resultParameters": {
						"type": "string"
					},
					"productId": {
						"type": "string"
					}
				}
			},
			"discoveringList_body": {
				"properties": {
					"name": {
						"type": "string"
					},
					"discoveringParameterList": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"operations_entries": {
				"type": "object",
				"properties": {
					"message": {
						"type": "object"
					},
					"priority": {
						"type": "number"
					}
				}
			}
		},
		"securitySchemes": {
			"Basic": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			},
			"Bearer": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			}
		}
	}
}